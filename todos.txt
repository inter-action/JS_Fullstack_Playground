
# blah blah blah

killall node

    $2a$10$Me6ee0U0pwsA9QrdmanvjOi1EurxcWltCsOaesoxt4HWFUWKuUhjW
    fuckyouguys

command + . # quick fix


# rename scripts

    #!/bin/bash
    for file in $(find test -type f); do
        case $file in
        *spec.ts) # has a extension
            mv $file ${file/spec/test};
        esac
    done



# Road maps
* how to debug with docker

docker-compose run api npm install cors

add docker proxy


# links:
  aws:
    https://medium.com/trisfera/deploying-an-express-application-to-aws-lambda-the-easy-way-fa5fbef190ba#.vmuhnsx7r
    
  https://www.tutorialspoint.com/makefile/makefile_dependencies.htm


todos:

  DONE:
  --------------------------------------------------------

    knex:
      update knex doc
      unify knex workflow


    bookshelf:
      add bookshelf orm
      validate model on save

    exception handling:
      unit test should ignore `UnprocessableEntityError` result by ctx.assert
      handle nodejs exception, no leak to user 
      integrate koa-route with https://github.com/hapijs/boom

    security: 
      change jwt id to uuid

    auth with passport:
      what session is for
      koa2 with passport
      https://github.com/rkusa/koa-passport


    validation: feel like no much need.
      how properly handle request validation
        writer a high order function that return a params validation middleware

      

    add status field on user
      0: none activiated
      1: activated
      2-5: warning stage
      6: locked

    es6 symbol - https://www.keithcirkel.co.uk/metaprogramming-in-es6-symbols/
    es6 reflect - https://www.keithcirkel.co.uk/metaprogramming-in-es6-part-2-reflect/
    es7 decorator - 
      https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841#.m9olqtn41
      https://www.typescriptlang.org/docs/handbook/decorators.html
      https://github.com/rbuckton/reflect-metadata
      
    add logger
    process.on(`uncaughtException`, console.error);
    /node_modules/@types/koa-router/index.d.ts
      package type declaration

    https://www.smashingmagazine.com/2016/08/getting-started-koa-2-async-functions/
      import bodyParser from 'koa-bodyparser';
      import cors from 'kcors';
    read nodejs stream doc
    replace bookshelf config the dotenv
    update npm package

    create a custom Validation error, eg. Inside user model
    change test framework mocha to ava
    merge get_mysql_env, ENV_UTILS 
    rename spec to test


    jwt 到底是干啥的 我记得是用作session的替代的，如果如此， 要留session 吗，还是两者并存
      两者可以并存, jwt 主要是 restful api 认证的，但是也可以存储其他信息，可以理解为一个cookie功能
      但是更新jwt需要和客户端进行约定，所以还是不能太好的当做cookie

    所有 可以await 的api 以一种统一的方式命名掉
    update doc related to knex migration

    replace all console log with logger, due to pino writing format
    make request no side effect run concurrently
    unit-test, treat db test specially, with loose timeout

    add authenticate middleware

    add Either type;
    local login should only take email as username
    
    replace bookshelf with typeorm
    clean bookshelf codes

    fix vscode annotation warning

    


  PENDING :
  --------------------------------------------------------
  
    mongodb 感觉比mysql好用多了，有没有做一版mongo的？
      事物该如何处理
    
    
    typescript: Object vs object vs {}
    refactor tests run on sqlite3
    timezone
    
    http://apidocjs.com/
      https://github.com/adrianObel/koa2-api-boilerplate
    
    clean todo in src code.
    json api versioning

    how this `res.body[0].explicit.should.not.be.ok;` is writed in src code
    redis cluster with docker
    https with nodejs: 
      https://medium.com/@nileshsingh/everything-about-creating-an-https-server-using-node-js-2fc5c48a8d4e#.9oz0lax2n
    integrate logrotate, docker with pino logger 
      http://www.nearform.com/nodecrunch/sematext-guest-post-pino-fastest-node-js-logger-production/?utm_source=nodeweekly&utm_medium=email
    
    add prod env
    add dependence explaination

    orm:
      filter sensitive data on fetch from db; like user.password
      find all, pagination, sort...etc
      intercept user password save ? should i implement this ? feel like this may add too much ambiguity

    test db eagerly on start, do a select on test db.

    security: 
    
    add utility to export & import data, like what Ghost does

    tracing:
      https://en.wikipedia.org/wiki/DTrace

    linux: 
      netstat
      nc

    typeorm:
      https://www.slideshare.net/billkarwin/models-for-hierarchical-data

      add DI: ?
        https://typeorm.github.io/using-service-container.html
        https://github.com/pleerock/typedi
    
    redis cache

    fileupload:
      http://stackoverflow.com/questions/33751203/how-to-parse-multipart-form-data-body-with-koa
      https://github.com/dlau/koa-body
        https://github.com/felixge/node-formidable 
    
    reactjs server side rendering:
      https://github.com/reactjs/react-router-tutorial/tree/master/lessons/13-server-rendering
      http://crypt.codemancers.com/posts/2016-09-16-react-server-side-rendering/
      https://github.com/revathskumar/react-server-render
      
      next, a reactjs server rendering framework - https://github.com/zeit/next.js/

      problems:
        * initial state,
        * (nodejs module resolution)require should work properly
        * integrate build workflow
        * 

      
      
      place this code `ReactDOMServer.renderToString` into client side, keep server code pure?


    https://nodejs.org/api/modules.html#modules_module_caching_caveats
      does require call has cache inside if not, there some optimization can be done here.

    typescript compiler option:
      https://github.com/Microsoft/TypeScript/issues/1232#issuecomment-64510362

    https://git-scm.com/book/en/v2/Git-Tools-Submodules